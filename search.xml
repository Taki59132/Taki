<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[資料結構]]></title>
    <url>%2FTaki%2F2017%2F11%2F15%2F%E8%B3%87%E6%96%99%E7%B5%90%E6%A7%8B%2F</url>
    <content type="text"><![CDATA[ADTs(Abstract Data Types) 資料與方法的封裝 可重複使用 使用者只可使用public方法 常被稱為資料結構 Interface 描述一個ADTs所 必須 被實作的動作 或 方法(包含傳回值與傳入值)。 可用來 多重繼承 所有的 方法 都是abstract methods 所有的 資料 前輟皆為 static final 實作(implement) 實作Interface時，將implement InterfaceName置於class後 除了實作所有Interface 中方法與資料外，可自行加上其他資料與方法甚至建構子(constructors)注意 必須將所有於 Interface中的方法全部實作，否則會出現syntax error 無法宣告Interface，否則將導致syntax errorATM anATM = new ATM(); // invalid statement 繼承 前言：人是哺乳類，所以人有哺乳類動物的特徵。以此觀點來看繼承即是，子代擁有父代所有的特徵、行為等，但這些特徵或行為可能保留，抑或是進化成使其更能生存於此環境。 於 要繼承的class 後加上extends superClassName this. this. 用於區隔 區域變數 與 class內成員變數 super() 使用父代建構子(constructor)將繼承自父代的資料先行初始化 必須位於子代建構子 第一行 若PM並沒有寫super於建構子第一行，Java 將自動於建構子第一行補上 建構子 (constructor) 如果PM沒有撰寫 無傳入值的建構子(constructor) ，Java會使用預設(default)建構子 如果PM有自行寫過無傳入值的建構子，Java便不使用預設建構子 如果子代含有無傳入值建構子而父代 以下以電腦與筆電為例 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566public class D2017_10_11 &#123; /** Class that represents a computers */ public class Computer &#123; // Data fields private String manufacturer; private String processor; private double ramSize; private int diskSize; private double processorSpeed; // Methods // Constructors public Computer(String man, String processor, double ram, int disk, double procSpeed) &#123; manufacturer = man; this.processor = processor;//用於區隔區域變數或成員變數 ramSize = ram; diskSize = disk; processorSpeed = procSpeed; &#125; public double computePower() &#123; return ramSize * processorSpeed; &#125; public double getRamSize() &#123; return ramSize; &#125; public double getProcessorSpeed() &#123; return processorSpeed; &#125; public int getDiskSize() &#123; return diskSize; &#125; public String toString() &#123; String result = "Manufacturer: " + manufacturer + "\nCPU: " + processor + "\nRAM: " + ramSize + " megabytes" + "\nDisk: " + diskSize + " gigabytes" + "\nProcessor speed: " + processorSpeed + " gigahertz"; return result; &#125; &#125; /** Class that represents a notebook computer **/ public class Notebook extends Computer &#123; // Date fields private double screenSize; private double weight; // Methods // Constructors public Notebook(String man, String processor, double ram, int disk, double procSpeed, double screen, double wei) &#123; super(man, processor, ram, disk, procSpeed); screenSize = screen; weight = wei; &#125; public String toString() &#123; String result = super.toString() + "\nScreen size: " + screenSize + " inches" + "\nWeight: " + weight + " pounds"; return result; &#125; &#125;&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[Java 物件問題]]></title>
    <url>%2FTaki%2F2017%2F11%2F14%2FJava-%E7%89%A9%E4%BB%B6%E5%95%8F%E9%A1%8C%2F</url>
    <content type="text"><![CDATA[繼承 子代繼承父代，改寫方法，新增功能。 子代的method必定多餘或等於父代。 Java 物件宣告子代實作父代 compilor Error 因子代功能多於父代 物件宣告父代實作子代 只可以使用父代所擁有的方法，無法使用子代方法。 因父代並無宣告此方法。 使結構有更好的彈性 當加入新的class 繼承自A，使用方法時，只需要再加判別即可，可降低對原有程式的衝擊。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253public class Main &#123; public static void main(String[] args) &#123; A obj = new A(); method1(obj); method1(new B()); method1(new C()); &#125; public static void method1(A obj) &#123;//A obj 的設計，讓此方法很有彈性。 obj.m1(); if (obj instanceof B) &#123;//識別B是否為obj的subclass B obj1 = (B) obj; obj1.m2(); &#125; if (obj instanceof C) &#123;//識別C是否為obj的subclass C obj1 = (C) obj; obj1.m3(); &#125; &#125;&#125;class A &#123; int a = 1; void m1() &#123; System.out.println("m1 of A"); &#125;&#125;class B extends A &#123; int a = 2; void m1() &#123; System.out.println("m1 of B"); &#125; void m2() &#123; System.out.println("m3 of B"); &#125;&#125;class C extends A &#123; int a = 3; void m1() &#123; System.out.println("m1 of C"); &#125; void m3() &#123; System.out.println("m4 of C"); &#125;&#125; 多形的產生 建立在方法的改寫。]]></content>
      <tags>
        <tag>code</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OSU]]></title>
    <url>%2FTaki%2F2017%2F11%2F03%2FOSU%2F</url>
    <content type="text"><![CDATA[好久沒完QAQ 排名173814 譜面不定時更新譜面https://drive.google.com/drive/folders/0B4Uh6_dwqtZ5TzlLdXI5dDZ1eEU?usp=sharing]]></content>
  </entry>
  <entry>
    <title><![CDATA[Java D2017_10_24]]></title>
    <url>%2FTaki%2F2017%2F10%2F24%2FJava-D2017-10-24%2F</url>
    <content type="text"><![CDATA[System.gc()建議 系統回收不使用的記憶體 物件終結者 非命令。 非立即回收。 原因需看系統當前忙碌程度來決定是否處理垃圾。]]></content>
  </entry>
  <entry>
    <title><![CDATA[AndroRat 安裝+設定]]></title>
    <url>%2FTaki%2F2017%2F10%2F17%2FAndroRat%2F</url>
    <content type="text"><![CDATA[Github下載： 網址： https://github.com/DesignativeDave/androrat (下圖) 先用cd進入想要存放的磁碟再使用git clone https://github.com/DesignativeDave/androrat.git (下圖) Android Studio下載 網址：https://developer.android.com/studio/index.html (下圖) 安裝完成圖(下圖) 選擇第三個import project(Eclipse ADT,Gradle,etc.)(下圖) 按下...選擇剛剛從github clone下來的資料夾中androat\src\Androrat這個資料夾(下圖) 下一步會需要將之前eclipse workspace的位置給Android Studio(下圖) 更改IP與Port(下圖) 輸出APK檔案(下圖) 將APK裝到手機上 AndroRatServer使用 開啟eclipse，並開啟檔案 接著對剛開起的專案按下右鍵，選擇properties 剛開始應該都是紅色叉叉，按下Add External JARs，將androRat\src\api中所有jar檔選取。 最後對專案按右鍵，選擇Run As-&gt; Java Application，下圖是因為我的手機還開著，所以自動跑了出來最終的結果，正常狀況是不會有任何東西的。 Port Forwording(NAT) 沒有錯，就是開啟你的機上盒的管理員 進入後，開啟NAT，將NAT打開，並使用CMD查詢IP(ipconfig)。 打開1337port並指向我電腦所在IP no-ip(DNS) 登入後，進入Managed DNS，選擇Add A Host，隨便取個名字，後按下Add Host 接著下載noip的Client端 安裝完後，登入後畫面 經過了以上設定後，手機輸入noip所給予的ip，port輸入我們所設定的1337後，按下start server即可。過一段時間後，就變成下圖 使用截圖 下圖是真的拿出所有的聯絡人資料，還可以遠端操控撥打電話。]]></content>
      <categories>
        <category>資訊安全</category>
      </categories>
      <tags>
        <tag>noip</tag>
        <tag>Android</tag>
        <tag>Secure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何使用Hexo + Github page架設專屬免費部落格(教學)]]></title>
    <url>%2FTaki%2F2017%2F10%2F10%2F%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Hexo-Github-page%E6%9E%B6%E8%A8%AD%E5%B0%88%E5%B1%AC%E5%85%8D%E8%B2%BB%E9%83%A8%E8%90%BD%E6%A0%BC-%E6%95%99%E5%AD%B8%2F</url>
    <content type="text"><![CDATA[教學．資料參考來源 Hexo 官方文件 &lt;- 他是中文的，他是中文的，他是中文的 手把手教你使用Hexo + Github Pages搭建个人独立博客 Markdown文件 &lt;- 它也是中文的!!! 建立個人部落格 建立分類頁面 建立標籤 建立關於頁面 hexo留言與主題設定(大頭貼設定以及留言板設定) 以上 參考時間 2017/8/17 ．建立環境 我的系統是 windows10，mac的不會QAQ，google上非常多資訊，只是可能要再自己消化。 Node.js 安裝方法 Git 下載 文字編輯器，個人使用sublime3 下載 + 序號 這是免安裝版本，序號的填入就請自行Google一下拉~ 相信不會很難的! 記得，在下面的code中，發現太長不好找時，ctr+F5 是你的好夥伴^.^ 終端機Ctr+r ，要進D槽，請鍵入D:。 進哪個資料夾就鍵入cd 位置`，這樣講還不行，Google吧。 GitHub帳號 申請完帳號後，到右上方+字符號，點選new repository。 進入後，輸入repository name，隨你喜好，只要右邊有綠色勾勾就可以。 按下create repository後出來的畫面。好了 ，就這麼簡單，你的repository就建好了，剩下，對於不熟悉code的人來說有些可怕，不用怕，關掉它吧!接下來的設定文件，先把git要設定的關鍵詞先放在這裡，等等要用時直接回頭複製貼上。 關鍵詞整理Githuburl: https://username.github.io/repositoryname root: /repositoryname/ type: git repo: https://github.com/username/repositoryname.git branch: master 其中 username就是你申請github時的username，repositoryname就是上面第二步你所填的名稱 ．安裝Hexo + Hexo-hey(視覺化後台)$ npm install -g hexo-cli(安裝hexo) $ cd 進想要存放blog的位置 $ hexo init yourname (產生一個yourname的 hexo網站) 此處yourname請自行命名。 $ cd yourname$ npm install(將網站安裝上去)$ npm install hexo-hey --save(安裝hexo-hey 視覺化的後台，為了之後po文時編輯的方便)$ npm install hexo-deployer-git --save(這是為了之後將hexo deploy上github pages上所需安裝的套件) 好了，需要安裝的差不多了。 個人是習慣先把必須安裝的安裝完再一次性進行設定，雖然出錯風險高，但按照步驟不會錯的。 接下來，開啟文字編輯器(sublime3)，使用方法這邊就不教。 open folder，找到資料夾，按下確認。(歐 我還是教了Orz) ．設定 最重要、最重要、最重要(大坑)： (我特別拉一區給它，雖然位置應該要下去，但，實在太重要，先放在上面) 你所有的設定，例如 title: taki blog 冒號後面，必須必須要加上一個空白，仔細看sublime3，編輯文字時，你便會發現區別。 在這裏面的設定，所有都只能夠有一個空白，任何少或者多都會造成無作用，因此，這點必須注意!如同你所看到的，deploy下面的子選項type，跟母選項，只含有1個tab的距離，任何多或少，都會Boom，搞到死都不知道錯在哪…。 deploy: type: 第一步 設定基本資料點開yourname/_config.yml(這個，便是整個網站設定的核心部分，至於詳細各個設定請參閱Hexo文件)在最上面會看到這個 以下是我已經改過的，屬於部落格的個人資料，可以自行改動。 title: Taki Blog subtitle: Taki Blog description: author: Taki language: zh-tw timezone: 第二步 設定部屬(deploy)在往下一點點看便會看到這個 下面的也是經過改動的。 url: https://username.github.io/repositoryname/ root: /repositoryname/ permalink: :year/:month/:day/:title/ permalink_defaults: 接下來，拉到最下面找到這個 deploy: type: 改成 deploy: type: git repo: https://github.com/username/repositoryname.git branch: master 有沒有發現什麼? 沒錯，就是複製貼上剛剛在上面做的事情，其實是我跌坑跌最慘的，所以才會先做一下筆記Orz需要更改、新增的地方便是url, root, type, repo, branch(這個可有可無，系統也會自己抓，但我還是用master，因為我不想讓它使用其他分支，這個大概只會用來做我的網站用。) 第三步 設定後台下面一行再新增這個，這個是做為後台所需要的 # Admin admin: name: hexo password: hey secret: hey hexo expire: 60*1 # cors: http://localhost:3000 太棒了，基本上的設定，就差不多這樣! ．寫下自己第一個的文章吧!注意：以下所有指令，都必須再yourname這個資料夾底下進行 常用指令後面()部分為簡寫。以下排列是有意義的，前三步，基本上是對文件做任何改動後必須做的流程，hexo d 就做為當你認為你的網站已經可以上去了就把它deploy上去吧。 $ hexo clean 清除public。對於每次的改動，都必須要先做一次這一個$ hexo generate (hexo g) 生成靜態文件，會於當前目錄下產生一個public的資料夾，這個資料夾將來會是deploy上Github 的一個文件夾，裡面包含你整個網站。$ hexo server (hexo s) 開啟本地web服務，讓你可以先不用deploy到Github上，就可以先行預覽你的網站。$ hexo deploy (hexo d) 部屬(deploy)到Github上 常用組合鍵$ hexo s -g 生成後預覽 那麼 遊戲開始(?) 第一步 產生我的網站$ hexo g 產生靜態文件$ hexo s 預覽網站 接下來，打開你的瀏覽器輸入http://localhost:4000/ ，由於上面的設定(url &amp; root)，所以你的網址會自動變成這樣http://localhost:4000/repositoryname/這是正常的。 恩 就這樣你的網站就這樣好了(！？) 文章(post) 與 網頁(page)差別? 好吧，這是我從網路上看到後記下來的東西，如果有錯，批小力點QQ post 屬於日常、動態的，它有分類、標籤這些功能。(系統預先設定的便是這個)page 屬於不會經常性更動的類型，因此，像是about, tags, categorys這類分頁，都屬於page的範疇 對了，其實指令也有這兩個 (中括號都要去掉 )$ hexo new [title] 建立一個post 的 title文件$ hexo new page [title] 建立一個page 的 title文件 至於為什麼不使用，原因很簡單，我們有後台拉(hexo-hey)~要這些做啥?有後台+markdown，寫一篇自己的部落格不難! 第二步 編輯我的文章請於瀏覽器上方輸入http://localhost:4000/admin (&lt;- 或用力戳它XD) 帳號：hexo 密碼：hey 恭喜你，看到了你的後台。(請自行摸索一下，它的功能實在是簡單到不想做這個筆記…) 沒有錯，其實我也只是第一次碰這個東西所以它除了learning markdown這個文章之外，根本就沒有其它東西 寫到目前的文章 上面有一個新建這個按鈕，接下來，就靠你的雙手，自學一下markdown這個簡單的語言吧(普通大概也就花個30-40分鐘就會了)~ 第三步 deploy到你的Github pages上終於到了這一步! (這邊我都假設你是正常狀況下，如果不是正常狀況，你可能要在自己debug一下看看是不是哪裡做錯了，我這邊基本上都測過是可以的) $ hexo d輸入吧，就是這樣。 你覺得這些很醜? 沒關係，有一個名人說過這類的話 如果你在發布你第一件產品的幾年後，回過頭來看，如果你不覺得很丟臉，那麼你起步得太慢了!正確的方式應該是，做好準備後(不需要萬全)，就起步，然後再快速調整，穩定輸出。 – 給有完美主義的你 看吧(好吧，你應該是不會有大頭照、標籤、分類、關於以及theme也不是長這樣，但這些之後再說。) 恭喜啦! 基本上，po文必需的事情地做完了! ．Theme更換以及分類、標籤、關於頁面第一步 clone 主題資料 這個也是在yourname資下夾下輸入注意：在日後需要clone theme時 ，注意後面要加上一個 themes/主題名稱 ，這個是跟git說，我要clone到這個資料夾，如果資料夾不存在，它會自己生成。 $ git clone https://github.com/iissnan/hexo-theme-next themes/next (如果你很懶的話，那就跟著潮流走吧) 第二步 開啟主題使用文字編輯器(sublime3)進yourname/_config.yml更改成 theme: next 第三步 分類、標籤、關於頁面、大頭照片的啟用關於裡面所有的_config.yml都是指themes/next下的哦! 千萬別搞錯了 建立分類頁面 建立標籤 建立關於頁面關於頁面，此頁面的編輯，請開啟文字編輯器(sublime3)，到source/about/index.md直接編輯，這個無法使用後台進行編輯。 仔細看，它是.md檔，因此，它是markdown文件，你是怎麼使用Hey hexo後台的，就怎麼樣使用它，只是無法像hey hexo一樣及時看到呈現。 大頭照片：先將你要的相片(我的相片名稱avatar.jpg)放到yourname/source/images底下，進yourname/themes/_config.yml下改成，他一開始是用#被註解掉的，請使用backspace變成底下 avatar: /images/avatar.jpg 第四步 重要三指令$ hexo clean $ hexo g $ hexo s 接下來，就細細的觀賞你的部落格吧，別忘了，欣賞完(沒問題後)要記得$ hexo d讓他上去讓大家也欣賞你個人的部落格囉。 ．留言板設置註冊與設定 選擇get start 選擇I Want to install Disqus on my site 填上自己想要的website name 請滑到最上面關鍵詞整理Github，把你的url輸入。 選擇你的website 6.找到你的shortname，並且複製起來(其實就是你剛剛註冊時填上的websitename) 接下來，開啟文字編輯器(sublime3)，開啟themes/你所設定的主題_config.yml，尋找disqus，並改成下列 #Disqus disqus: enable: true shortname: 你的shortname count: true 儲存後，於終端機鍵入三指令$ hexo clean $ hexo g $ hexo s觀賞吧，你的網站。至於 關於、標籤、分類頁面上都會有留言板，可以滑到上面教學，裡面有處理辦法，請再次回去看吧。]]></content>
      <categories>
        <category>部落格</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
        <tag>github pages</tag>
      </tags>
  </entry>
</search>
